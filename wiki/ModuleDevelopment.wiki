#summary How to develop a module or plugin for Pixie.
#labels Phase-Implementation,module,development,plugins,php

A quick guide to making Pixie do more with Modules and Plugins. You will need knowledge of PHP and MySQL to create your own module or plugin, if that sounds to tricky please contact [http://www.toggle.uk.com toggle], who will be happy to quote you for bespoke module development.

=== a Module, a Plugin... what is the difference? ===
----

*A Module*
  A module is quite simply a page that brings extra functionality to Pixie and your website. This might be a product database, links page or events calendar. Modules are always post based page, this means you keep posting information to them e.g. Adding a new event, adding a new product.

*A Plugin*
  Generally speaking a plugin will bring extra functionality to a module. For example you might need a secondary table for your events calendar that stores venues. This is what a plugin should  be use for. There are a few exceptions to this, the RSS plugin that ships with Pixie has been specifically built to allow you to edit which RSS feeds appear in the head of your html. These plugins require hacking of the Pixie core system.


=== URL Structure ===
----

I need to mention is the URL structure, as this forms the basis of how Pixie works.

Lets say your Pixie site is installed at www.mysite.com... When is visit www.mysite.com/page/ (or www.mysite.com?s=page for those of you without clean URL support) Pixie maps the word "page" to a variable. In this case the variable is `$s`. Pixie supports upto four variables to from the url (www.mysite.com/1/2/3/4) and each one maps to a different variable name:

In this example: www.mysite.com/page/do/something/please/ the URL will be mapped to:

  * `$s` = "page".
  * `$m` = "do".
  * `$x` = "something".
  * `$p` = "here".

`$s, $m, $x and $p` are then available to us within our modules for manipulation. Pixie converts all URL's to lowercase and does not require the last "/" on the end of the URL to work. I do apologise for the slightly random choice of variable names, originally Pixie was called "SMX" and that choice of variables has been around since then.


=== Setting up your tables ===
----

Throughout this document we will be working on creating a very simple links module which is available with the Pixie download.

The first part of developing your module is creating the database tables. Pixie uses a number of conventions that you must be aware of when creating your table. Lets start with the table name:

  * *Table name*
  The name of your database table is important, it must always start with `pixie_module_` followed by the module name. For our links page example I create a table called `pixie_module_links`.

_Tip: You can also create a secondary table with for your module with `_settings` in its name: e.g. `pixie_module_links_settings`. Pixie will automatically look for this table when you are editing the settings of a page. If found pixie will create a form and allow the settings to be changed._ 

Next up is the ID field for your table, once again the naming is important:

  * *Table ID*
  The name of your table id must match the name of your table, for our links module the id field is called `links_id`. Notice I am using the word "links" (plural) every time I declare it, it would not work if I called the ID: `link_id`.

So lets have a look at the SQL for my links module:

{{{

CREATE TABLE IF NOT EXISTS `pixie_module_links` (
  `links_id` int(4) NOT NULL auto_increment,
  `link_title` varchar(150) collate utf8_unicode_ci NOT NULL default '',
  `tags` varchar(200) collate utf8_unicode_ci NOT NULL default '',
  `url` varchar(300) collate utf8_unicode_ci NOT NULL default '',
  PRIMARY KEY  (`links_id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1 ;


}}}

My links module uses a very simple table that stores a link ID, a link title, tags for the link and the URL itself. Any field set to `NOT NULL` will be required when the form is saved. Pixie will automatically check this flag and report an error when saving if the field is left empty. 

To help make module development quicker Pixie looks for certain field names and automatically handles different data types as well. Lets take a look at what Pixie is looking for:

==== Data Types ====
  
  * *VARCHAR*
  For any field set to VARCHAR Pixie will create a simple input text box, Pixie looks for the `length` flag and limits the text box to this many characters. In our links table above the `link_title` is limited to 150 characters. 

  * *TIMESTAMP*
  Pixie will convert these fields into a date drop down and time input box. The default time is Now.

  * *SET('yes', 'no')*
  Will be converted into two radio boxes, one for 'yes' and one for 'no'.

  * *LONGTEXT*
  This field will be converted into an [http://tinymce.moxiecode.com TinyMce] text area.

We are looking to add more data type handling as we develop Pixie (for instance "bool" to be converted into a checkbox). If you would like to suggest more please [http://groups.google.com/group/pixie-cms/ get in touch].

==== Field Names ====

  * *email*
  Any field with the name email will be validated as an email address when saved. In the table view within Pixie it will also be turned into a clickable mailto: link. 

  * *url*
  URL will be validated as a URL when the entry is saved. The link will also be clickable in the table view of Pixie.

  * *file*
  Any field that begins with the word file (e.g. file_1, file_download, file) will list all the files that have been uploaded to your site in a drop down list. The user will also have the option of uploading a new file. This is known as inline uploading.
 
  * *image*
  This works that same as above except only images are listed in the drop down list. When selecting an image in the drop down form the user also gets an option to preview the image.

  * *audio*
  Any field that begins with audio (e.g. audio_file, audio) will create a drop down of all uploaded audio files. The user also has the option to upload a new file.

  * *video*
  As above except with video files.

  * *document*
  As above except with document files.

  * *tags*
  The tags feature is quite rich within Pixie. Any field called tags will allow you to effortlessly create tag clouds, browse by tag within the Pixie interface and also provide recommended tags from previously saved entries. For an example look at any dynamic (blog/news) page.

  * *privs*
  This field name will create a drop down list of the three Pixie privileges. 

  * *title & post_slug*
  If your table has fields with both of these names Pixie will automatically create a slug of the title and save it into post_slug. For example: I have just created a new blog entry called "hello world", when I save this entry Pixie automatically populates the post_slug filed with "hello-world". The allows me to retrieve the post at a later date using a friendly slug. For an example look at the `pixie_dynamic_posts` table.

Pixie will automatically try and convert your field names to be human friendly. In our links page example, the field `link_title`, will be shown as "Link title" throughout Pixie. This encourages you to use sensible names in your database. Sometimes you will need a little more control than this and Pixie provides in through the language file. If I created the following two entries in my language file (admin/lang/en-gb.php):

{{{

// overwrite field name
'form_link_title' => 'Please enter your link title:',

// provide help within the form.
'form_help_link_title' => 'This will be validated as a URL, please include http://',

}}} 

Pixie will overwrite the field `link_title` with the top line, and the second line will appear in the form to give extra hints or help about what the user should enter. This feature can be very handy for improving the usability of the form for your module. We do realise that this does cause some impracticalities; new modules may require the user to edit their language file which is further complicated when more languages are introduced. If you have any suggestions in improving this (maybe languages are moved to database?) then please [http://groups.google.com/group/pixie-cms/let us know]. 

=== Creating the file ===
----

So you have created your table and changed any nasty field names in your language file. Its now time to create your file and let Pixie know about it. All modules are stored in the modules folder (admin/modules/). Your file name for your module must match the name use in your tables, so I am going to create a file called `links.php`. You may find it useful to download our module template and rename it.

Now you need to let Pixie know that your module exists, to do this we need to insert a new row (page) into the `pixie_core` table. The SQL for the links module looks like this:

{{{

INSERT INTO `pixie_core` (`page_id`, `page_type`, `page_name`, `page_display_name`, `page_description`, `page_blocks`, `page_content`, 
`page_views`, `page_parent`, `privs`, `publish`, `public`, `in_navigation`, `page_order`, `searchable`, `last_modified`) VALUES 
(5, 'module', 'links', 'Links', '<p>My links.</p>', '', '', 0, '', 2, 'yes', 'yes', 'yes', , 'no', '2008-04-09 16:57:55'),

}}}

This is what some of the more important field within `pixie_core` are all about:

  * *page_type*

  * *page_name*

  * *page_display_name*

  * *page_description*

  * *publish*

  * *public*

  * *in_navigation*

  * *searchable*

The fields I have not listed here are easily edited with Pixie and explained in the settings area if you want to know more. 

=== The links page example ===
----

Now is a good time to jump straight into programming the module itself, rather than explain everything I have copied the heavily commented module below:


{{{
 code block
}}}


=== Useful functions ===
----

There are a few functions available to you from within Pixie, these are the most useful:

  * *createURL($s,$m,$x,$p)* 

  * *encode_email($email_address)*

... etc.

=== What next? ===
----

This is only a very quick example of what is possible when extending Pixie. We will try and add more examples to this wiki soon. In the mean time why not download some of our other modules and plugins and pick them apart.  

----

If you have questions about this page head to the [http://groups.google.com/group/pixie-cms/ Pixie forums].